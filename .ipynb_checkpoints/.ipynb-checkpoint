{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "thesum = 0\n",
    "n = 0\n",
    "A = True\n",
    "Lnum= 0\n",
    "Snum = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a number or press 'N' to quitN\n"
     ]
    }
   ],
   "source": [
    "while A:\n",
    "    number = input(\"enter a number or press \\'N' to quit\")\n",
    "    if number == \"N\":\n",
    "        break\n",
    "    else:\n",
    "        n = n+1\n",
    "        theSum += float(number)\n",
    "        print(\"Total number of entries: \", n, \"\\nTotal sum of numbers: \", theSum)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a number or press 'N' to quit2\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'theSum' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-5-b61e23be136c>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      5\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m         \u001b[0mn\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mn\u001b[0m\u001b[1;33m+\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m         \u001b[0mtheSum\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtheSum\u001b[0m\u001b[1;33m+\u001b[0m \u001b[0mfloat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m         \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"Total number of entries: \"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"\\nTotal sum of numbers: \"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtheSum\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'theSum' is not defined"
     ]
    }
   ],
   "source": [
    "while A:\n",
    "    number = input(\"enter a number or press \\'N' to quit\")\n",
    "    if number == \"N\":\n",
    "        break\n",
    "    else:\n",
    "        n = n+1\n",
    "        theSum = theSum+ float(number)\n",
    "        print(\"Total number of entries: \", n, \"\\nTotal sum of numbers: \", theSum)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a number or press 'N' to quit : 2\n",
      "Total number of entries:  1 \n",
      "Total sum of numbers:  2.0\n",
      "enter a number or press 'N' to quit : 3\n",
      "Total number of entries:  2 \n",
      "Total sum of numbers:  5.0\n",
      "enter a number or press 'N' to quit : 4\n",
      "Total number of entries:  3 \n",
      "Total sum of numbers:  9.0\n"
     ]
    }
   ],
   "source": [
    "thesum = 0\n",
    "n = 0\n",
    "A = True\n",
    "Lnum= 0\n",
    "Snum = 0\n",
    "\n",
    "while A:\n",
    "    number = input(\"enter a number or press \\'N\\' to quit : \")\n",
    "    if number == \"N\":\n",
    "        break\n",
    "    else:\n",
    "        n = n+1\n",
    "        thesum = thesum + float(number)\n",
    "        print(\"Total number of entries: \", n, \"\\nTotal sum of numbers: \", thesum)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "thesum = 0\n",
    "n = 0\n",
    "A = True\n",
    "Lnum= 0\n",
    "Snum = 0\n",
    "\n",
    "while A:\n",
    "    number = input(\"enter a number or press \\'N\\' to quit : \")\n",
    "    if number == \"N\":\n",
    "        break\n",
    "    else:\n",
    "        n = n+1\n",
    "        thesum = thesum + float(number)\n",
    "        \n",
    "        if (float(number)>Lnum):\n",
    "            Lnum = float(number)\n",
    "            \n",
    "            if (float(number)>Snum):\n",
    "                Snum = float(number)\n",
    "            \n",
    "    print(\"Total number of entries: \", n, \"\\nTotal sum of numbers: \", thesum, \"\\nLargest Number : \", Lnum,\n",
    "         \"\\nSmallest Number: \", Snum, \"\\nAverage: \", thesum/n)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "thesum = 0\n",
    "n = 0\n",
    "A = True\n",
    "Lnum= 0\n",
    "Snum = 0\n",
    "\n",
    "while A:\n",
    "    number = input(\"enter a number or press \\'N\\' to quit : \")\n",
    "    if number == \"N\":\n",
    "        break\n",
    "    else:\n",
    "        n = n+1\n",
    "        thesum = thesum + float(number)\n",
    "        \n",
    "        if (float(number)>Lnum):\n",
    "            Lnum = float(number)\n",
    "            \n",
    "            if (float(number)>Snum):\n",
    "                Snum = float(number)\n",
    "            \n",
    "    print(\"Total number of entries: \", n, \"\\nTotal sum of numbers: \", thesum, \"\\nLargest Number : \", Lnum,\n",
    "         \"\\nSmallest Number: \", Snum, \"\\nAverage: \", thesum/n)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
